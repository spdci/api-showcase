version: '3.5'
services:
  postgres:
    container_name: postgres
    image: postgres:14.5
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-W@nder@2022}
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - dockernetwork
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:19.0.1
    environment:
      KC_DB: postgres
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KC_DB_SCHEMA: public
      KC_DB_URL_DATABASE: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_PORT: 5432
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_FEATURES:
        authorization
        token-exchange
        docker
        impersonation
        scripts
        upload-scripts
        web-authn
        client-policies
        dynamic-scopes
    entrypoint: /opt/keycloak/bin/kc.sh start-dev --auto-build
    networks:
      - dockernetwork
    volumes:
      - ./keycloak_data/keycloak.local+1.pem:/opt/keycloak/conf/server.crt.pem
      - ./keycloak_data/keycloak.local+1-key.pem:/opt/keycloak/conf/server.key.pem
    ports:
      - 9080:8080
      - 9443:8443

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.12.2-management
    ports:
      - 5672:5672
      - 15672:15672

networks:
  dockernetwork:
    name: dockernetwork
    driver: bridge
volumes:
    postgres:
    pgadmin: